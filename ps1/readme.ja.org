# -*- mode: org ; coding: utf-8-unix -*-
# last updated : 2015/09/05.04:07:15


#+TITLE:     LLVM Build Shell by Power Shell
#+AUTHOR:    yaruopooner [https://github.com/yaruopooner]
#+OPTIONS:   author:nil timestamp:t |:t \n:t ^:nil


* 使用方法
  このシェルではWindowsのLLVMがビルド可能です。
  llvm-builder.ps1が本体です。
  sample.ps1が呼び出しサンプルです。
  patchパスなど必要に応じて編集してください。
  CYGWINやMSYSから実行すると実行時パス解釈がおかしくなるためWindowsのCMDかエクスプローラーから実行推奨。

* セルフビルドに必要なソフトウェア
  以下が必要になります。

** Visual Studio 2015/2013/2012/2010
   どれでもOK

** Subversion
   http://tortoisesvn.net/

   ソリューションビルド時にsvnコマンドラインが呼び出されるのでTortoiseSVNにパスが通っている必要がある。
   checkout/updateだけならCYGWINのsvnで可能だがお勧めしない。
   svnを呼び出してリビジョンナンバーなどを埋め込んだヘッダファイルを生成したりするが
   CYGWINのsvnだとパス解釈が正しく実行されない場合がありビルド時に該当ファイルがないといわれてしまうケースがある。
   なのでCYGWINのshellなどから実行しないほうがよい。

** CMake
   http://www.cmake.org/

   Windows ZIPをダウンロードして何処かへ展開。
   Visual Studio ソリューション＆プロジェクトファイル生成と、カスタムビルドステップ時のスクリプト実行で使用される。
   sample.ps1でパスを設定する必要があります。
	
** Python 2.7.x
   http://www.python.org/
   http://www.python.org/download/

   Python 2.7.x Windows X86-64 Installer を使用
   3.x 系は使用しない。
   cmake で LLVMのソリューションファイルを生成する際に必要。
   sample.ps1でパスを設定する必要があります。

** GnuWin32
   http://sourceforge.net/projects/getgnuwin32/   

   カスタムビルドステップで使用される。
   sample.ps1でパスを設定する必要があります。

* セルフビルド
  Power Shell版を使用します。

  llvm-build-shellsでは以下を一括で行います。
  - LLVMチェックアウト
  - パッチ適用(optional)
  - cmakeによるLLVMソリューションファイル生成
  - Visual Studio(MSBuild)によるビルド

  ビルドするターゲットプラットフォーム(64/32)、コンフィグレーション(release/debug)の指定が可能です。

** パッチ
   sample.ps1でパッチのパスを設定する必要があります。
