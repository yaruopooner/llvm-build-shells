# -*- mode: org ; coding: utf-8-unix -*-
# last updated : 2019/11/07.14:07:43


#+TITLE:     LLVM Build Shell by Power Shell
#+AUTHOR:    yaruopooner [https://github.com/yaruopooner]
#+OPTIONS:   author:nil timestamp:t |:t \n:t ^:nil


* Usage
  This shell can build LLVM of Windows.
  llvm-builder.ps1 is body.
  sample.ps1 is call sample.
  Please edit if neccessary, such as patch path.
  Launch of this shell should not be done the CYGWIN and MSYS.
  because, shell is wrong the path interpretation.
  There is a need to launch from the Windows CMD or EXPLORER.

* Requirements
  The following is required. 

** Visual Studio 2019/2017/2015/2013/2012/2010[required]
   any ok.

** Git[required]
   https://git-scm.com/download/win

   Use the PortableGit.
   You need to set the PATH in sample.ps1.

** CMake[required]
   http://www.cmake.org/

   You download The Windows ZIP and decompress to somewhere.
   CMake generate a Visual Studio solution and project file.
   And it is used in the execution on script of custom build step.
   You need to set the PATH in sample.ps1.
	
** Python 2.7.x[recommend]
   http://repo.msys2.org/mingw/x86_64/
   http://repo.msys2.org/mingw/i686/

   Use Python 2.7.x (msys2).
   Should not use 3.x
   Required when CMake to generate the project files of LLVM.
   You need to set the PATH in sample.ps1.

** MSYS2[unrecommend]
   _Behavior changed by updating msys2 and changed to deprecated._

   http://jaist.dl.sourceforge.net/project/msys2/Base/x86_64/

   Python and Perl support.
   Perl is also required when Win32 build.
   Easier than individually install Python and Perl.
   Does not pollute the environment because it uses the portable version.
   You need to set the PATH in sample.ps1.

** GnuWin32[unrecommend]
   http://sourceforge.net/projects/getgnuwin32/   

   It is used in a custom build step.
   You need to set the PATH in sample.ps1.

* Required software download support
  =./tools-latest-version/tools-installer.ps1=
  When you use this script, 
  Described software in =./tools-latest-version/tools-installer.options= will be downloaded and archive-expand to =./tools-latest-version/= 

  TOOL-PATH for described to a =sample.ps1= , use the =./tools-latest-version/= that has been archive-expand.

  By default, PortableGit and Cmake and Python 2.7.x (msys2) will be downloaded.

** +about MSYS2+ (unrecommend)
   MinGW64 shell is auto launch after archive-expand.
   #+begin_src shell-script
     $ cd /tmp
     $ ./setup-msys2.sh
   #+end_src
   When you do this, MSYS2 update latest environment.
   If don't do this, Python2.7x and Perl not install.

   If you use proxy, before =setup-msys2.sh= execution
   it is necessary to set such http_proxy by editing the =setup-msys2.options= .

* Self Build
  Use Power Shell version.

  llvm-build-shells performs the following step at a time.
  - LLVM repository clone and checkout
  - apply patch(optional)
  - project files generation by CMake
  - build by Visual Studio(MSBuild)

  The following parameters designatable at llvm-build-shells.
  - build target platform(64/32)
  - build configuration(release/debug) 

** Patch
   You need to set the PATH of patch in sample.ps1.

   [[../patch/details.org][Patch Details]]

   
